fileFormatVersion: 2
guid: 5419c5d1d2ede4cde844dd059edfebce
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nexports.ScaleInterpolationType = exports.RotationInterpolationType
    = exports.PositionExtrapolationType = exports.PositionInterpolationType = exports.UpdateOwner
    = void 0;\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst ZEPETO_Multiplay_1
    = require(\"ZEPETO.Multiplay\");\r\nconst ZEPETO_World_1 = require(\"ZEPETO.World\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst SyncIndexManager_1 = require(\"../Common/SyncIndexManager\");\r\nconst
    MultiplayManager_1 = require(\"../Common/MultiplayManager\");\r\nclass TransformSyncHelper
    extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n       
    super(...arguments);\r\n        this.UpdateOwnerType = UpdateOwner.Undefine;\r\n       
    /** Sync Options **/\r\n        this.SyncPosition = true;\r\n        this.UseHardSnap
    = true;\r\n        this.HardSnapIfDistanceGreaterThan = 10;\r\n        this.InterpolationType
    = PositionInterpolationType.Estimate;\r\n        this.ExtrapolationType = PositionExtrapolationType.Disable;\r\n       
    this.extraMultipler = 1;\r\n        this.moveSpeed = 10;\r\n        this.SyncRotation
    = true;\r\n        this.RotationInterpolationType = RotationInterpolationType.Lerp;\r\n       
    this.rotateSpeed = 100;\r\n        this.SyncScale = false;\r\n        this.ScaleInterpolationType
    = ScaleInterpolationType.Lerp;\r\n        this.scaleUpSpeed = 100;\r\n       
    this.m_isSteadyServerConnect = false;\r\n        this.m_isOwner = false;\r\n       
    this.m_timeStampCount = 0;\r\n        this.tick = 0.04;\r\n        /** Interpolation
    **/\r\n        this.m_lastGetTimeOut = 0.04; //(newGet().timeStamp - prevGet().timeStamp)
    / 1000\r\n        this.m_bufferedState = new Array(2);\r\n        this.newGet
    = () => this.m_bufferedState?.length > 0 ? this.m_bufferedState[0] : null;\r\n       
    this.prevGet = () => this.m_bufferedState?.length > 1 ? this.m_bufferedState[1]
    : null;\r\n    }\r\n    get Id() {\r\n        return this.m_Id;\r\n    }\r\n   
    set Id(id) {\r\n        this.m_Id = id;\r\n    }\r\n    get isOwner() {\r\n       
    return this.m_isOwner;\r\n    }\r\n    Start() {\r\n        if (!this.m_Id) {\r\n           
    SyncIndexManager_1.default.SyncIndex++;\r\n            this.m_Id = SyncIndexManager_1.default.SyncIndex.toString();\r\n       
    }\r\n        this.m_positionCache = this.transform.position;\r\n        this.SyncTransform();\r\n   
    }\r\n    FixedUpdate() {\r\n        if (!this.newGet())\r\n            return;\r\n       
    if (this.m_isOwner)\r\n            return;\r\n        if (this.m_objectStatus
    != MultiplayManager_1.GameObjectStatus.Enable)\r\n            return;\r\n       
    if (this.SyncPosition) {\r\n            this.SyncPositionUpdate();\r\n       
    }\r\n        if (this.SyncRotation) {\r\n            this.SyncRotationUpdate();\r\n       
    }\r\n        if (this.SyncScale) {\r\n            this.SyncScaleUpdate();\r\n       
    }\r\n    }\r\n    SyncTransform() {\r\n        this.multiplay = UnityEngine_1.Object.FindObjectOfType($typeof(ZEPETO_World_1.ZepetoWorldMultiplay));\r\n       
    if (null != MultiplayManager_1.default.instance?.room) {\r\n            this.room
    = MultiplayManager_1.default.instance.room;\r\n            this.room.add_OnStateChange(this.OnStateChange.bind(this));\r\n       
    }\r\n        else {\r\n            this.multiplay.add_RoomJoined((room) => {\r\n               
    this.room = room;\r\n                this.room.add_OnStateChange(this.OnStateChange.bind(this));\r\n           
    });\r\n        }\r\n        this.StartCoroutine(this.SteadyServerConnect());\r\n   
    }\r\n    OnStateChange(state, isFirst) {\r\n        if (null == this.syncTransform)
    {\r\n            this.syncTransform = state.SyncTransforms.get_Item(this.m_Id);\r\n           
    if (this.syncTransform) {\r\n                this.OnChangeTransform();\r\n               
    this.ForceTarget();\r\n                this.syncTransform.add_OnChange(() =>
    {\r\n                    this.OnChangeTransform();\r\n                });\r\n               
    this.room.remove_OnStateChange(this.OnStateChange.bind(this));\r\n           
    }\r\n            else {\r\n                // Initial definition if not defined
    on the server                \r\n                this.m_objectStatus = MultiplayManager_1.GameObjectStatus.Enable;\r\n               
    this.SendTransform();\r\n                this.SendStatus();\r\n            }\r\n       
    }\r\n    }\r\n    // A function that changes the owner of the update.\r\n   
    ChangeOwner(ownerSessionId) {\r\n        if (null == this.room)\r\n           
    this.room = MultiplayManager_1.default.instance.room;\r\n        if (this.room.SessionId
    == ownerSessionId && !this.m_isOwner) {\r\n            this.m_isOwner = true;\r\n           
    this.m_sendCoroutine = this.StartCoroutine(this.CheckChangeTransform(this.tick));\r\n       
    }\r\n        else if (this.room.SessionId != ownerSessionId && this.m_isOwner)
    {\r\n            this.m_isOwner = false;\r\n            if (null != this.m_sendCoroutine)\r\n               
    this.StopCoroutine(this.m_sendCoroutine);\r\n        }\r\n    }\r\n    OnChangeTransform()
    {\r\n        if (this.m_isOwner)\r\n            return;\r\n        if (null !=
    this.syncTransform.status && this.syncTransform.status != this.m_objectStatus)
    {\r\n            this.m_objectStatus = this.syncTransform.status;\r\n           
    this.ChangeStatus(this.syncTransform.status);\r\n        }\r\n        this.m_positionCache
    = this.transform.position;\r\n        const pos = new UnityEngine_1.Vector3(this.syncTransform.position.x,
    this.syncTransform.position.y, this.syncTransform.position.z);\r\n        const
    rot = new UnityEngine_1.Quaternion(this.syncTransform.rotation.x, this.syncTransform.rotation.y,
    this.syncTransform.rotation.z, this.syncTransform.rotation.w);\r\n        const
    scale = new UnityEngine_1.Vector3(this.syncTransform.scale.x, this.syncTransform.scale.y,
    this.syncTransform.scale.z);\r\n        const localPos = new UnityEngine_1.Vector3(this.syncTransform.localPosition.x,
    this.syncTransform.localPosition.y, this.syncTransform.localPosition.z);\r\n       
    // Shift buffer contents, oldest data erased, 0 becomes 1\r\n        this.m_bufferedState[1]
    = this.m_bufferedState[0];\r\n        // Save currect received state as 0 in
    the buffer, safe to overwrite after shifting\r\n        const interpolState =
    {\r\n            timestamp: this.syncTransform.sendTime,\r\n            position:
    pos,\r\n            localPosition: localPos,\r\n            rotation: rot,\r\n           
    scale: scale\r\n        };\r\n        this.m_bufferedState[0] = interpolState;\r\n       
    if (this.m_timeStampCount == 0) {\r\n            this.m_bufferedState[1] = interpolState;\r\n       
    }\r\n        // Increment state count but never exceed buffer size\r\n       
    this.m_timeStampCount = UnityEngine_1.Mathf.Min(this.m_timeStampCount + 1, this.m_bufferedState.length);\r\n       
    const timeOut = (this.newGet().timestamp - this.prevGet().timestamp) / 1000;\r\n       
    this.m_lastGetTimeOut = timeOut < this.tick ? this.m_lastGetTimeOut : timeOut;\r\n   
    }\r\n    ChangeStatus(status) {\r\n        switch (+status) {\r\n           
    case MultiplayManager_1.GameObjectStatus.Destroyed:\r\n                UnityEngine_1.Object.Destroy(this.gameObject);\r\n               
    break;\r\n        }\r\n    }\r\n    ForceTarget() {\r\n        if (this.m_isOwner)\r\n           
    return;\r\n        if (null == this.newGet())\r\n            return;\r\n       
    if (this.SyncPosition)\r\n            this.transform.position = this.newGet().position;\r\n       
    if (this.SyncRotation)\r\n            this.transform.rotation = this.newGet().rotation;\r\n       
    if (this.SyncScale)\r\n            this.transform.localScale = this.newGet().scale;\r\n   
    }\r\n    SyncPositionUpdate() {\r\n        if (this.transform.parent != null)
    {\r\n            if (UnityEngine_1.Vector3.op_Equality(this.newGet().localPosition,
    this.prevGet().localPosition)) {\r\n                this.transform.localPosition
    = this.newGet().localPosition;\r\n                return;\r\n            }\r\n       
    }\r\n        if (this.UseHardSnap) {\r\n            if (UnityEngine_1.Vector3.Distance(this.newGet().position,
    this.transform.position) > this.HardSnapIfDistanceGreaterThan) {\r\n               
    this.transform.position = this.newGet().position;\r\n                return;\r\n           
    }\r\n        }\r\n        const extraOffset = this.GetExtraPolationOffset();\r\n       
    const targetPos = UnityEngine_1.Vector3.op_Addition(this.newGet().position, extraOffset);\r\n       
    const getDis = UnityEngine_1.Vector3.Distance(this.newGet().position, this.prevGet().position);\r\n       
    const targetDis = UnityEngine_1.Vector3.Distance(targetPos, this.m_positionCache);\r\n       
    let extraSpeed;\r\n        if (this.InterpolationType == PositionInterpolationType.Estimate)
    {\r\n            extraSpeed = getDis == 0 ? this.moveSpeed : targetDis / this.m_lastGetTimeOut;\r\n       
    }\r\n        else if (UnityEngine_1.Vector3.op_Inequality(extraOffset, UnityEngine_1.Vector3.zero))
    {\r\n            // extra speed = originDis : originSpeed = extraDis : extraSpeed
    \r\n            // => extraSpeed = originSpeed * extraDis / originDis\r\n           
    extraSpeed = getDis == 0 ? this.moveSpeed : (this.moveSpeed * targetDis) / getDis;\r\n           
    extraSpeed = UnityEngine_1.Mathf.Clamp(extraSpeed, this.moveSpeed, this.moveSpeed
    * 2);\r\n        }\r\n        else {\r\n            extraSpeed = this.moveSpeed;\r\n       
    }\r\n        switch (+this.InterpolationType) {\r\n            case (PositionInterpolationType.None):\r\n               
    this.transform.position = targetPos;\r\n                break;\r\n           
    case (PositionInterpolationType.Lerp):\r\n                this.transform.position
    = UnityEngine_1.Vector3.Lerp(this.transform.position, targetPos, extraSpeed *
    UnityEngine_1.Time.fixedDeltaTime);\r\n                break;\r\n           
    case (PositionInterpolationType.MoveToward):\r\n                this.transform.position
    = UnityEngine_1.Vector3.MoveTowards(this.transform.position, targetPos, extraSpeed
    * UnityEngine_1.Time.fixedDeltaTime);\r\n                break;\r\n           
    case (PositionInterpolationType.Estimate):\r\n                this.transform.position
    = UnityEngine_1.Vector3.MoveTowards(this.transform.position, targetPos, extraSpeed
    * UnityEngine_1.Time.fixedDeltaTime);\r\n                break;\r\n        }\r\n   
    }\r\n    SyncRotationUpdate() {\r\n        switch (+this.RotationInterpolationType)
    {\r\n            case (RotationInterpolationType.None):\r\n                this.transform.rotation
    = this.newGet().rotation;\r\n                break;\r\n            case (RotationInterpolationType.Lerp):\r\n               
    this.transform.rotation = UnityEngine_1.Quaternion.Lerp(this.transform.rotation,
    this.newGet().rotation, this.rotateSpeed * UnityEngine_1.Time.fixedDeltaTime);\r\n               
    break;\r\n            case (RotationInterpolationType.MoveToward):\r\n               
    this.transform.rotation = UnityEngine_1.Quaternion.RotateTowards(this.transform.rotation,
    this.newGet().rotation, this.rotateSpeed * UnityEngine_1.Time.fixedDeltaTime);\r\n               
    break;\r\n        }\r\n    }\r\n    SyncScaleUpdate() {\r\n        switch (+this.ScaleInterpolationType)
    {\r\n            case (ScaleInterpolationType.None):\r\n                this.transform.localScale
    = this.newGet().scale;\r\n                break;\r\n            case (ScaleInterpolationType.Lerp):\r\n               
    this.transform.localScale = UnityEngine_1.Vector3.Lerp(this.transform.localScale,
    this.newGet().scale, this.scaleUpSpeed * UnityEngine_1.Time.fixedDeltaTime);\r\n               
    break;\r\n            case (ScaleInterpolationType.MoveToward):\r\n               
    this.transform.localScale = UnityEngine_1.Vector3.MoveTowards(this.transform.localScale,
    this.newGet().scale, this.scaleUpSpeed * UnityEngine_1.Time.fixedDeltaTime);\r\n               
    break;\r\n        }\r\n    }\r\n    GetExtraPolationOffset() {\r\n        if
    (this.ExtrapolationType == PositionExtrapolationType.Disable) {\r\n           
    return UnityEngine_1.Vector3.zero;\r\n        }\r\n        if (UnityEngine_1.Vector3.op_Equality(this.newGet().position,
    this.prevGet().position)) {\r\n            return UnityEngine_1.Vector3.zero;\r\n       
    }\r\n        const moveDirection = UnityEngine_1.Vector3.Normalize(UnityEngine_1.Vector3.op_Subtraction(this.newGet().position,
    this.prevGet().position));\r\n        const latency = (MultiplayManager_1.default.instance.GetServerTime()
    - this.newGet().timestamp) / 1000;\r\n        let extraPolationOffSet = UnityEngine_1.Vector3.zero;\r\n       
    switch (+this.ExtrapolationType) {\r\n            case (PositionExtrapolationType.FixedSpeed):\r\n               
    extraPolationOffSet = UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Vector3.op_Multiply(moveDirection,
    latency), this.moveSpeed), this.extraMultipler);\r\n                break;\r\n           
    case (PositionExtrapolationType.Estimate):\r\n                const estimatedSpeed
    = UnityEngine_1.Vector3.Distance(this.newGet().position, this.prevGet().position)
    / this.m_lastGetTimeOut;\r\n                extraPolationOffSet = UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Vector3.op_Multiply(moveDirection,
    latency), estimatedSpeed), this.extraMultipler);\r\n                break;\r\n       
    }\r\n        return extraPolationOffSet;\r\n    }\r\n    //isOwner\r\n    *CheckChangeTransform(tick)
    {\r\n        const syncNextFrameMax = 10;\r\n        let syncNextFrameCount =
    0;\r\n        let syncNowFrame = true;\r\n        let isFirst = true;\r\n       
    let pastPos = this.transform.position;\r\n        let pastRot = this.transform.rotation;\r\n       
    let pastScale = this.transform.localScale;\r\n        let pastLocalPos = this.transform.localPosition;\r\n       
    this.m_objectStatus = MultiplayManager_1.GameObjectStatus.Enable;\r\n       
    while (true) {\r\n            if (this.SyncPosition && UnityEngine_1.Vector3.op_Inequality(pastPos,
    this.transform.localPosition)) {\r\n                pastPos = this.transform.localPosition;\r\n               
    syncNowFrame = true;\r\n            }\r\n            if (this.SyncRotation &&
    UnityEngine_1.Quaternion.op_Inequality(pastRot, this.transform.rotation)) {\r\n               
    pastRot = this.transform.rotation;\r\n                syncNowFrame = true;\r\n           
    }\r\n            if (this.SyncScale && UnityEngine_1.Vector3.op_Inequality(pastScale,
    this.transform.localScale)) {\r\n                pastScale = this.transform.localScale;\r\n               
    syncNowFrame = true;\r\n            }\r\n            //Transmit any values that
    have changed values.\r\n            if (syncNowFrame) {\r\n                this.SendTransform();\r\n               
    syncNowFrame = false;\r\n                syncNextFrameCount = 0;\r\n               
    if (isFirst) {\r\n                    this.SendStatus();\r\n                   
    isFirst = false;\r\n                }\r\n            }\r\n            //Send
    10 more frames even if stopped\r\n            else if (syncNextFrameCount < syncNextFrameMax)
    {\r\n                this.SendTransform();\r\n                syncNextFrameCount++;\r\n           
    }\r\n            yield new UnityEngine_1.WaitForSeconds(tick);\r\n        }\r\n   
    }\r\n    SendTransform() {\r\n        const data = new ZEPETO_Multiplay_1.RoomData();\r\n       
    data.Add(\"Id\", this.m_Id);\r\n        const pos = new ZEPETO_Multiplay_1.RoomData();\r\n       
    pos.Add(\"x\", this.transform.position.x);\r\n        pos.Add(\"y\", this.transform.position.y);\r\n       
    pos.Add(\"z\", this.transform.position.z);\r\n        data.Add(\"position\",
    pos.GetObject());\r\n        const localPos = new ZEPETO_Multiplay_1.RoomData();\r\n       
    localPos.Add(\"x\", this.transform.localPosition.x);\r\n        localPos.Add(\"y\",
    this.transform.localPosition.y);\r\n        localPos.Add(\"z\", this.transform.localPosition.z);\r\n       
    data.Add(\"localPosition\", localPos.GetObject());\r\n        const rot = new
    ZEPETO_Multiplay_1.RoomData();\r\n        rot.Add(\"x\", this.transform.rotation.x);\r\n       
    rot.Add(\"y\", this.transform.rotation.y);\r\n        rot.Add(\"z\", this.transform.rotation.z);\r\n       
    rot.Add(\"w\", this.transform.rotation.w);\r\n        data.Add(\"rotation\",
    rot.GetObject());\r\n        const scale = new ZEPETO_Multiplay_1.RoomData();\r\n       
    scale.Add(\"x\", this.transform.localScale.x);\r\n        scale.Add(\"y\", this.transform.localScale.y);\r\n       
    scale.Add(\"z\", this.transform.localScale.z);\r\n        data.Add(\"scale\",
    scale.GetObject());\r\n        data.Add(\"sendTime\", MultiplayManager_1.default.instance.GetServerTime());\r\n       
    this.room.Send(MESSAGE.SyncTransform, data.GetObject());\r\n    }\r\n    SendStatus()
    {\r\n        const data = new ZEPETO_Multiplay_1.RoomData();\r\n        data.Add(\"Id\",
    this.Id);\r\n        data.Add(\"Status\", this.m_objectStatus);\r\n        this.room.Send(MESSAGE.SyncTransformStatus,
    data.GetObject());\r\n    }\r\n    *SteadyServerConnect() {\r\n        const
    pastPingCount = MultiplayManager_1.default.instance.pingCheckCount;\r\n       
    yield new UnityEngine_1.WaitUntil(() => MultiplayManager_1.default.instance.pingCheckCount
    > pastPingCount + 1);\r\n        this.m_isSteadyServerConnect = true;\r\n   
    }\r\n}\r\nexports.default = TransformSyncHelper;\r\nvar UpdateOwner;\r\n(function
    (UpdateOwner) {\r\n    UpdateOwner[UpdateOwner[\"Master\"] = 0] = \"Master\";\r\n   
    UpdateOwner[UpdateOwner[\"Undefine\"] = 1] = \"Undefine\";\r\n})(UpdateOwner
    = exports.UpdateOwner || (exports.UpdateOwner = {}));\r\nvar PositionInterpolationType;\r\n(function
    (PositionInterpolationType) {\r\n    PositionInterpolationType[PositionInterpolationType[\"None\"]
    = 0] = \"None\";\r\n    PositionInterpolationType[PositionInterpolationType[\"Lerp\"]
    = 1] = \"Lerp\";\r\n    PositionInterpolationType[PositionInterpolationType[\"MoveToward\"]
    = 2] = \"MoveToward\";\r\n    PositionInterpolationType[PositionInterpolationType[\"Estimate\"]
    = 3] = \"Estimate\";\r\n})(PositionInterpolationType = exports.PositionInterpolationType
    || (exports.PositionInterpolationType = {}));\r\nvar PositionExtrapolationType;\r\n(function
    (PositionExtrapolationType) {\r\n    PositionExtrapolationType[PositionExtrapolationType[\"Disable\"]
    = 0] = \"Disable\";\r\n    PositionExtrapolationType[PositionExtrapolationType[\"FixedSpeed\"]
    = 1] = \"FixedSpeed\";\r\n    PositionExtrapolationType[PositionExtrapolationType[\"Estimate\"]
    = 2] = \"Estimate\";\r\n})(PositionExtrapolationType = exports.PositionExtrapolationType
    || (exports.PositionExtrapolationType = {}));\r\nvar RotationInterpolationType;\r\n(function
    (RotationInterpolationType) {\r\n    RotationInterpolationType[RotationInterpolationType[\"None\"]
    = 0] = \"None\";\r\n    RotationInterpolationType[RotationInterpolationType[\"Lerp\"]
    = 1] = \"Lerp\";\r\n    RotationInterpolationType[RotationInterpolationType[\"MoveToward\"]
    = 2] = \"MoveToward\";\r\n})(RotationInterpolationType = exports.RotationInterpolationType
    || (exports.RotationInterpolationType = {}));\r\nvar ScaleInterpolationType;\r\n(function
    (ScaleInterpolationType) {\r\n    ScaleInterpolationType[ScaleInterpolationType[\"None\"]
    = 0] = \"None\";\r\n    ScaleInterpolationType[ScaleInterpolationType[\"Lerp\"]
    = 1] = \"Lerp\";\r\n    ScaleInterpolationType[ScaleInterpolationType[\"MoveToward\"]
    = 2] = \"MoveToward\";\r\n})(ScaleInterpolationType = exports.ScaleInterpolationType
    || (exports.ScaleInterpolationType = {}));\r\nvar MESSAGE;\r\n(function (MESSAGE)
    {\r\n    MESSAGE[\"SyncTransform\"] = \"SyncTransform\";\r\n    MESSAGE[\"SyncTransformStatus\"]
    = \"SyncTransformStatus\";\r\n})(MESSAGE || (MESSAGE = {}));\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/ZepetoScripts/MultiplaySync/Transform/TransformSyncHelper.ts","manifest":{"properties":[{"assembly":"","name":"UpdateOwnerType","type":"UpdateOwner","isArray":false,"initValue":["Undefine"],"enumKeys":["Master","Undefine"],"enumValues":["0","1"],"attributes":[]},{"assembly":"mscorlib","name":"SyncPosition","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Position\""]}]},{"assembly":"mscorlib","name":"UseHardSnap","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"HardSnapIfDistanceGreaterThan","type":"System.Single","isArray":false,"initValue":["10"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Tooltip","args":["\"Force
    the position to be modified if it is farther than this number.\""]}]},{"assembly":"","name":"InterpolationType","type":"PositionInterpolationType","isArray":false,"initValue":["Estimate"],"enumKeys":["None","Lerp","MoveToward","Estimate"],"enumValues":["0","1","2","3"],"attributes":[]},{"assembly":"","name":"ExtrapolationType","type":"PositionExtrapolationType","isArray":false,"initValue":["Disable"],"enumKeys":["Disable","FixedSpeed","Estimate"],"enumValues":["0","1","2"],"attributes":[]},{"assembly":"mscorlib","name":"extraMultipler","type":"System.Single","isArray":false,"initValue":["1"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Tooltip","args":["\"The
    creditworthiness of the offset figure of the extrapolation.\""]}]},{"assembly":"mscorlib","name":"moveSpeed","type":"System.Single","isArray":false,"initValue":["10"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Tooltip","args":["\"This
    is the given speed for lerp/movetoward/fixedspeed options.\""]}]},{"assembly":"mscorlib","name":"SyncRotation","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Rotation\""]}]},{"assembly":"","name":"RotationInterpolationType","type":"RotationInterpolationType","isArray":false,"initValue":["Lerp"],"enumKeys":["None","Lerp","MoveToward"],"enumValues":["0","1","2"],"attributes":[]},{"assembly":"mscorlib","name":"rotateSpeed","type":"System.Single","isArray":false,"initValue":["100"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"SyncScale","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Scale\""]}]},{"assembly":"","name":"ScaleInterpolationType","type":"ScaleInterpolationType","isArray":false,"initValue":["Lerp"],"enumKeys":["None","Lerp","MoveToward"],"enumValues":["0","1","2"],"attributes":[]},{"assembly":"mscorlib","name":"scaleUpSpeed","type":"System.Single","isArray":false,"initValue":["100"],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"TransformSyncHelper","description":""},"isCompiled":true}'
  typescriptHash: 912ef6c5921d516d5b828d22dfea5f66
  onlyWriteTrigger: 0
